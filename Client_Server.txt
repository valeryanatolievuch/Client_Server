Client_Server

1)  Клиент-серверная архитектура: 
    Сетевая архитектура, в которой задания или сетевая нагрузка распределены между поставщиками услуг/серверами и заказчиками услуг/клиентами
    Клиент и сервер это ПО которые взаимодействуют между собой по сетевым протоколам

2)  Что такое HTTP и HTTPS
    HTTP: HyperText Transfer Protocol — «протокол передачи гипертекста» - это протокол передачи данных изначально предназначенный для гипертекстовых документов
    (документов, которые могут содержать ссылки для перехода к другим документам). Передача данных осуществляется через TCP/IP - Соединения, обычно через TCP-порт 80
 
    Работает в режиме: 
    Запрос-ответ
  
	Структура пакета HTTP:
    Запрос/статус ответа
    *GET/имя страницы 
    *200 OK
    Заголовки (не обязательно)
    Тело сообщения (не обязательно)

    HTTPS: HyperText Transfer Protocol Secure  — расширение протокола HTTP для поддержки шифрования в целях повышения безопасности. В отличие от HTTP 
    с TCP-портом 80, для HTTPS по умолчанию используется TCP-порт 443
    HTTPS: Протокол который обеспечивает конфиденциальность данных обмена между сайтом и пользовательским устройством. Бесзопастность обеспечивается за счет
    использования криптографичческих протоколов SSL/TLS с такими уровями защиты
    - 1 Шифрование данных - позволяет избежать перехвата данных 
    - 2 Сохранность данных - любое изменение данных фиксируется
    - 3 Аутентификация защищает от перенаправления пользователя
	На HTTPS лучше перейти если:
    - Сайт проводит платежи в интернете
    - Сайт использует личные данные пользователя (например, номер паспорта)
  
	Для избежания перехвата данных третьим лицом используется цифровой сертификат - электронный документ, который идентифицирует сервер. 
	В сертификате указывается данные владельца и полпись.
    Сертификат подтверждает что:
    - Лицо, которому он выдан, действительно существует
    - Оно является владельцем сервера (сайта), указанного в сертификате.
    Сертификаты бывают нескольких видов в зависимости от факторов:
    - Необходимого уровня безопасности
    - Количества доменных имён и поддоменов
    - количества владельцев 
  
3)  HTTP методы - последовательность из любых символов, кроме управляющих и раздилителей, которая определяет операцию, которую нужно осуществить
    с указанным ресурсом
    GET – запрос Web-страницы (получение ресурса)
    POST – передача данных на Web-сервер (создание ресурса)
    HEAD – запрос заголовка страницы
    PUT – помещение страницы на Web-сервер (обновление ресурса)
    DELETE – удаление страницы с Web-сервера (удаление ресурса)
    TRACE – трассировка страницы
    OPTIONS – запрос поддерживаемых методов HTTP для ресурса
    CONNECT – подключение к Web-серверу через прокси

4)  HTTP статус коды сервера (37 шт.) / код состояния / Status Code - три цифры, которые определяют результат совершения запроса.
    1XX – информация
    2XX – успешное выполнение (200 Успех, "ОК")
    3ХХ – перенаправление (301 – постоянное перемещение, 307 – временное перенаправление)
    4ХХ – Ошибка на стороне клиента (403 – доступ запрещен/отсутствие привелегий для доступа к ресурсу, 404 – страница не найдена/ресурса нет)
    5ХХ – Ошибка сервера (500 – внутренняя ошибка сервера)
 
5)  Что такое ядро браузера 
    Ядро браузера - это совокупность HTML-парсера, рендера и еще нескольких базовых модулей, включая обработчик сценариев Java и JavaScript. 
    Все остальные функции являются внешними и выполняются оболочкой
 
6)  Какие браузеры какие ядра используют
    IE (до 9) = Trident + Jscript
    IE (после 9) = Trident + Chakra
    Firefox = Gecko+JagerMonkey 
    Safari = webkit=webcore+jscore 
    Chrome = Blink+v8 
    Opera = Blink+v8

7)  Что такое API
    Application Programming Interface - интерфейс программирования приложений 
    Описание способов взаимодействия между програраммами как они могут общаться и взаимодействовать друг с другом
 
8)  Что такое ендпоинты
    url включает в себя маршрут (основная часть адреса сервиса) и endpoint (часть url, которая содержит например имя вызываемого метода). 
    Существует один маршрут и у него несколько эндпоинтов. Т.о. здесь endpoint - это только часть url.

9)  URL (URI, URL, URN)
    URL - Адрес -  Uniform Resourse Locator - уникальное положение ресурса / адрес веб страницы в интернете
    Формат URL: http(название протокола)://www.google.ru(доменное имя сервера)/имя страницы 

    URI- Путь -  Uniform Resourse Identifier - уникальный идентификатор ресурса. Путь до конкретного ресурса, над которым нужно осуществить операцию.
    Пример URI:
    GET /isers/10 (запрашивает информацию по 10-му пользователю)

    URN - Имя -  (Uniform Resource Name) является уникальным именем объекта

10) Идемпотентные HTTP методы - Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, 
    имеет один и тот же эффект, не изменяющий состояние сервера. Другими словами, идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), 
    кроме сбора статистики или подобных операций. Корректно реализованные методы GET, HEAD, PUT и delete идемпотентны, но не метод POST, PATCH

    Суть идемпотентных HTTP методов: при использование таких методов побочные эффекты одинаковы как в случае однократного запроса, так и в случае многократного повторения одного и того же запроса, т.е. нагрузка одинакова, но HTTP ответ от сервера может поступать каждый раз разный. К идемпотентным методам относятся следующие HTTP методы: GET, HEAD, PUT и DELETE. Так же эффектом идемпотентности обладают HTTP методы OPTIONS и TRACE.

11) Безопасные HTTP методы
    (Safe method HTTP) На данный момент принято соглашение о том, что HTTP методы GET и HEAD никогда не должны иметь иного значения, кроме загрузки, 
    поэтому данные HTTP методы нужно рассматривать, как безопасные, это требование HTTP. Поэтому ваш браузер, когда используются методы POST, 
    PUT или DELETE предупреждает вас о том, что может произойти потенциально опасное действие и спрашивает: нужно ли его выполнить.

12) Идентификация, Аутентификация, Авторизация
    Идентификация — процесс распознавания пользователя по его идентификатору
    Аутентификация — процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдает
    Авторизация — предоставление определённых прав

13) Что такое IP
    IP-адрес – это уникальный адрес, идентифицирующий устройство в интернете или локальной сети.
    IP означает «Интернет-протокол» – набор правил, регулирующих формат данных, отправляемых через интернет или локальную сеть.

14) Что такое октаты в DNS
    DNS - компьютерная распределённая система преобразование символьного имени в IP-адрес и наоборот. 
	Термин DNS образуется от аббревиатуры Domain Name System (система доменных имён)
	
15) Что такое порт, сколько портов у Linux сервера
16) Уровни OSI
17) Хедеры http запросов
18) Тонкий клиент: например браузер - переносит все или большую информацию на сервер
19) Толстый клиент: например 1С бухгатлерия - в нём содержится вся бизнес логика а на сервере только БД (Примеры Танки - клиент на ПК, стата на сервере)
20) Веб-сайт: Веб страница с инфой т.е платформа для контента для посетилителей (Новости, прогноз погоды)
21) Веб-приложения: Пользователь может взаимодействовать с программой встроенной в веб страницу (фейсбук, озон, mail, youtube)
22) Веб-сервисы: Прикладной программный интерфейс API, позволяет веб приложениям взаимодействовать между собой
23) TCP - Протокол транспортного уровня


























